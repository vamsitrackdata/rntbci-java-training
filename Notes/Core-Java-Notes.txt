Naming Conventions in Java ..
=====================================
1.class : Every class name in Java should starts with the Upper case letter. If there are more than one word in the class name
        then second work first letter should be capitalized.
        Ex: Student, Employee, EmployeeInformation, DisplayStudentAccountDetails
        
2.methods and objects: Every method in Java should start with lower case letter. If there are more than one word in the method name
        then second word  first letter should be capitalized.
        Ex: display(), info(), processData(), displayEmployeeInformation(), toString() .. etc

3.package names and keywords: Every package in Java should start with lower case letter.
        Ex: com, java.lang, java.io, com.xoriant.ecart .. etc

4. Constants: Every constant in Java should be defined in all upper case letters.
              Ex: final int MAX_AGE=10, final float PI=3.141, int MAX_PRIORITY=10

Access Modifiers
=====================
1. public
2. default
3. protected
4. private


1. public
----------
-> accessable from any package.

2. default
----------
-> default data accessable only with in the same package.

3. protected
--------------
-> protected data accessable only with in the same package.
-> protected data accessable to the sub class's objects from other Packages

4. private
-----------
-> private data accessable with in same class only



Inheritance
---------------
Inheritance can be defined as the process where one class acquires the properties (methods and fields) of another. With the use of inheritance the information is made manageable in a hierarchical order.

The class which inherits the properties of other is known as subclass (derived class, child class) and the class whose properties are inherited is known as superclass (base class, parent class).

extends Keyword
---------------
extends is the keyword used to inherit the properties of a class. Following is the syntax of extends keyword.

Syntax

class Super {
   .....
   .....
}
class Sub extends Super {
   .....
   .....
}


Inheritance has three main advantages:

1. Reusability:
Inheritance allows you to reuse the features of an existing class an unlimited number of times across any class that inherits that class. You can keep consistent functionality across all objects of the same type without rewriting the code.
2. Code Structure: 
Inheritance provides a clear, drawable logic structure for your program. It allows developers to understand your code as a collection of related but unique categories rather than simply a block of code.
2. Data Hiding: 
The base class can be set to keep some data private so that it cannot be altered by the derived class. This is an example of encapsulation, where access to data is restricted to only the classes that need it for their role.


Notes
--------

1. A super class reference can store all its sub class objects.
2. Reference of a super class can be used to access all methods of super class, and 
   common methods (methods which are preent in both super and sub classes ie overridden methods)
   of sub class.
3. super class reference can not access individual methods of sub class (a method which is present in the sub
   class and not present in the super class.)